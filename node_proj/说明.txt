开启代理:  anyproxy -i -p 8001 

-i 开启https
-s 静默模式，不打印信息
-x 是否启用fork模式，windows 默认不支持fork模式，会报错，windows下把-x去掉就行了
提示：windows下之只能用node ./anyproxy_start.js 开启anyproxy

用脚本开启： anyproxy -i -rule myrule.js

开启websocket抓包 ：anyproxy --ws-intercept

生成证书：
anyproxy-ca


当访问特定的HTTPS站点，AnyProxy会提示该站点不是一个安全的网站，这通常是因为站点的证书设置不能被正确识别导致的（比如，站点的证书是自签发的）。如果您信任该网站,可以通过启动参数 --ignore-unauthorized-ssl 来忽略证书认证的错误

anyproxy -i --ignore-unauthorized-ssl

综合：
没日志：
anyproxy -i --ignore-unauthorized-ssl -p 8001 -s -r ./anyproxy_rule.js

有日志：
anyproxy -i --ignore-unauthorized-ssl -p 8001 -r ./anyproxy_rule.js

代理websocket：
anyproxy -i --ignore-unauthorized-ssl -p 8001 -s --ws-intercept -r ./anyproxy_rule.js

使用pm2开启：
pm2 start anyproxy -x -- -i --ignore-unauthorized-ssl -p 8001 -s -r ./anyproxy_rule.js

pm2,代理websocket:
pm2 start anyproxy -x -- -i --ignore-unauthorized-ssl -p 8001 -s --ws-intercept -r ./anyproxy_rule.js


输入IP:8001端口无限自己代理bug修复：
在c/user/Administrator/AppData/Roaming/npm/node_module/anyproxy/lib/requestHandler.js 的getUserReqHandler函数296行增加：
 //console.log("hcc>>req: ")
 //console.log(req.headers)
if(req.headers.Host){
  if(req.headers.Host == "127.0.0.1:8001" || req.headers.Host == "hccluck.com:8001" || req.headers.Host == "1.15.80.165:8001" || req.headers.Host == "172.17.16.11:8001"){
      console.log("hcc>>error>>8001, host: " , req.headers.Host)
      return
   }
}
